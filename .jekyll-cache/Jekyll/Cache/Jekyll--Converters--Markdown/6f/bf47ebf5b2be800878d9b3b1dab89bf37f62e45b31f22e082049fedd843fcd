I"E<p><img src="/assets/images/posts/Codeit/codeit.png" alt="codeit" class="align-center" /></p>

<h1 id="프로그래밍-시작하기-in-python">프로그래밍 시작하기 in Python”</h1>

<p>프로그래밍 시장은 계속 커지고 있다. 하지만 사실 현업에서는 뛰어난 개발자를 없어서 못 구한다는 것. 프로그래밍의 세계는 광범위하기 때문에, 올바른 방향을 갖고 효과적으로 공부하는 것이 매우 중요하다. 코드잇의 컴퓨터 개론을 통해 프로그래밍 언어, 프로그래머, 프로그램에 대해 올바른 이해를 갖고, 나만의 커리어 로드맵을 만들어 보자.</p>

<p>컴퓨터의 세계를 이해하려면 프로그래밍을 느껴봐야 하지 않겠는가? 파이썬을 사용하면 프로그래밍을 가장 심플하게 배워볼 수 있다.</p>

<p class="notice--info"><strong>💡Infomation:</strong>
이 학습은 하루 1시간 학습을 기준으로 약 12일이 소요됩니다.</p>

<h2 id="파이썬-첫-걸음">파이썬 첫 걸음</h2>

<h3 id="우리가-사용할-도구들">우리가 사용할 도구들</h3>

<p>파이썬으로 코딩을 하기 위해 우리가 설치해야 하는 프로그램이 두 개 있다. <strong>Python interpreter</strong> 와 <strong>PyCharm</strong> 이 그것이다. 각각 어떤 역할을 하는지 설명하겠다.</p>

<p>우리가 쓴 파이썬 코드를 컴퓨터가 그대로 이해할 수 없다. 컴퓨터가 이해할 수 있는 언어는 Machine Code 이다. 그래서 우리가 쓴 파이썬 코드를 Machine Code 로 번역해야 할 필요가 있는데, 여기서 필요한 것이 <strong>Python interpreter</strong> 이다. 파이썬 코드를 번역해주는 프로그램이라고 생각하면 편하다.</p>

<p>PyCharm 은 우리가 코딩을 더 편하게 할 수 있도록 도와주는 프로그램이라고 생각하면 된다. 코딩을 하는데 필요한 프로그램들이 있는데 PyCharm은 이 프로그램들을 하나로 모은 <strong>All in One</strong> 솔루션이다. 이와 같은 프로그램을 <strong>통합개발환경(Integrated Development Environment, IDE)</strong>라고 한다.</p>

<p>이제부터 Python interpreter 와 PyCharm 을 함께 설치해보자.</p>

<hr />

<h3 id="파이썬-설치-for-mac">파이썬 설치 (for Mac)</h3>

<p>먼저 Python interpreter 를 설치해보자. <a href="https://www.python.org/">Python 홈페이지</a> 의 다운로드 탭에서 Mac용 최신버전을 다운로드 받을 수 있다. Phthon도 지속적으로 발전하기 때문에 버전이 존재한다. 가장 최신 버전을 다운 받도록 한다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/1.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/1.png" alt="파이썬 다운로드" class="align-center" /></a></p>

<p>다운로드가 끝나면 다운받은 파일을 열어 설치과정을 따라서 설치한다. 중간에 동의를 요구하는 항목은 잘 읽어본뒤 동의를 눌러준다. 이것으로 Python interpreter 의 설치가 간단하게 끝이난다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/2.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/2.png" alt="파이썬 설치" class="align-center" /></a></p>

<p>다음으로 PyCharm 을 설치해보자. PyCharm 은 PyCharm 을 만든 JetBrains 의 홈페이지에서 다운로드 받을 수 있다. <a href="https://www.jetbrains.com/ko-kr/pycharm/download/#section=mac">다운로드 페이지</a>로 이동하여 Community 버전의 PyCharm 을 다운로드 받는다. 우리는 아직 좌측의 Professional 버전까지 필요하지 않아 Community 버전으로 다운로드 하자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/3.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/3.png" alt="파이참 다운로드" class="align-center" /></a></p>

<p>다운로드가 끝나면 설치 파일을 실행하여 설치를 진행한다. 팝업 창에서 PyCharm 아이콘을 Applications 폴더에 드래그하여 넣어주는 것으로 간단하게 설치가 완료된다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/4.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/4.png" alt="파이참 설치" class="align-center" /></a></p>

<p>파이썬을 사용하는데 필요한 두개의 프로그램을 모두 설치했다. 이제 파이썬 코드를 작성해보자. 설치된 PyCharm 을 실행한다. 만약 ‘import PyCharm Settings from…’ 팝업이 등장한다면 ‘Do not import settings’ 옵션을 선택하고 넘어가자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/5.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/5.png" alt="파이참 실행" class="align-center" /></a></p>

<p>PyCharm 의 시작화면이 나오면 <strong>New Project</strong> 버튼을 눌러 새로운 PyCharm 프로젝트를 생성한다. 아래 화면처럼 새 프로젝트의 생성 위치를 설정하는 화면이 나온다. Location 부분에 원하는 경로를 지정해주면 된다.</p>

<p>Project Interpreter 부분에 Base interpreter 부분을 잠시 살펴보자. 파이썬으로 코딩을 하기 위해서는 Python interpreter 가 필요한데, 여기서 어떤 Python interpreter 를 사용할지 정해주는 부분이다. 위에서 설치한 Python Interpreter 가 정상적으로 설치되었다면 이곳에 설치한 Python interpreter 가 자동으로 설정되어있을 것이다.</p>

<p>아래쪽의 Project Interpreter 부분은 그대로 두고 하단의 Create 버튼을 눌러 프로젝트를 생성한다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/6.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/6.png" alt="프로젝트 생성" class="align-center" /></a></p>

<p>로딩이 끝나면 오른쪽의 프로젝트 폴더를 우클릭한다. New → Python File 순으로 클릭하여 파이썬 파일을 만들자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/7.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/7.png" alt="파일 생성" class="align-center" /></a></p>

<p>파일의 이름을 입력하는 창이 등장한다. 원하는 이름을 입력하고 아래쪽에서 Python File 을 선택해준 뒤 <code class="language-plaintext highlighter-rouge">Enter</code> 를 눌러 파일을 생성한다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/8.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/8.png" alt="파일 이름 지정" class="align-center" /></a></p>

<p>생성한 파일이 우리가 만든 파이썬 프로젝트 폴더 안에 들어있는 것을 확인할 수 있다. 파이썬 파일은 <code class="language-plaintext highlighter-rouge">.py</code> 확장자를 가지고 있다.</p>

<p>이제 파이썬 코드를 작성해보자. hello.py 파일에 다음과 같은 코드를 작성한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"Hello World!"</span><span class="p">)</span>
</code></pre></div></div>

<p>코드를 작성했으면 좌측에서 생성한 파이썬 파일을 우클릭 한 뒤, <strong>Run ‘파일명’</strong> 을 클릭한다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/9.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/9.png" alt="파이썬 코드 실행" class="align-center" /></a></p>

<p>올바르게 작성했다면 화면 아래 어떤 영역이 나타나고 ‘Hello world!’ 가 표시되는 것을 볼 수 있을 것이다. 여기까지 잘 따라왔다면 Python interpreter 와 PyCharm 이 정상적으로 잘 설치되었다고 볼 수 있다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/10.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/10.png" alt="파이썬 코드 실행 결과" class="align-center" /></a></p>

<hr />

<h3 id="pycharm-둘러보기">PyCharm 둘러보기</h3>

<p>Python interpreter 와 PyCharm 을 설치했으니 PyCharm을 조금 둘러보면서 코드도 작성해보도록 하자. 비어있는 파이썬 프로젝트를 생성하여 시작한다. 우측의 프로젝트 폴더를 우클릭하여 New → File 순으로 클릭하여 파일을 만들자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/11.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/11.png" alt="파일 생성" class="align-center" /></a></p>

<p>생성할 파일 이름을 입력하는 창이 등장하면 원하는 파일 이름과 확장자를 입력하고 <code class="language-plaintext highlighter-rouge">Enter</code> 를 눌러 파일을 생성한다. 여기서는 hello.py 로 생성하겠다. 이름 뒤에 .py를 붙여 생성하면 파이썬 파일로 생성할 수 있다. 즉, hello 라는 이름의 파이썬 파일을 생성하는 것이다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/12.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/12.png" alt="파일 이름 지정" class="align-center" /></a></p>

<p>파일을 생성하는 방법은 이전에 설명한 방법까지 두 가지가 있다. 우측에 프로젝트 폴더를 우클릭하여 New → Python File 을 클릭한다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/13.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/13.png" alt="파일 생성 방법2" class="align-center" /></a></p>

<p>마찬가지로 이름을 입력하는 창이 등장하면 원하는 파일 이름’만’ 입력하고 <code class="language-plaintext highlighter-rouge">Enter</code> 를 눌러 생성할 수 있다. 확장자를 입력하지 않아도 되기 때문에 이 방법이 조금 더 간단하다고 할 수 있다. 이번에는 goodbye 라는 이름으로 파일을 생성해보겠다. 그러면 총 두개의 파일을 생성한 것이 된다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/14.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/14.png" alt="파일 생성 방법2" class="align-center" /></a></p>

<p>이제 코드를 작성해보자. 먼저 생성한 hello.py 파일을 더블클릭하여 연다. 다음의 코드를 작성해보자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"Hello world!"</span><span class="p">)</span>
</code></pre></div></div>

<p>이제 작성된 프로그램을 실행하기 위해서 좌측에서 hello.py 파일을 우클릭 한 뒤, <strong>Run ‘hello’</strong> 를 클릭한다. 아래쪽에 어떤 창이 등장하는데 이 창을 <strong>콘솔</strong> 이라고 부른다. 우리가 작성한 <code class="language-plaintext highlighter-rouge">print</code> 는 콘솔에 무언가를 출력하도록 하는 문법이다. 괄호 안에 작성된 것이 콘솔에 출력된다. print 문법에 Hello world! 로 작성했던 내용을 Hello Codeit! 으로 변경한 뒤 콘솔창 좌측의 초록색 ► 모양의 실행 아이콘을 클릭해보자. 실행 버튼은 가장 최근에 실행된 파일을 다시 실행한다. 콘솔에 출력되어있던 Hello world! 가 Hello Codeit! 으로 변경된 것을 확인할 수 있다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/15.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/15.png" alt="run 버튼으로 실행" class="align-center" /></a></p>

<p>print 문법을 이용해서 글자만이 아니라 숫자의 연산같은 것들도 출력할 수 있다. Hello Codeit! 으로 작성된 print문의 내용을 2 + 5 로 수정한 후 실행 버튼을 다시 클릭해보자. 2 + 5 의 값인 7이 출력되는 것을 확인할 수 있다. 2 * 5 등의 연산으로도 바꿔서 실행해보자. 역시 게산된 값이 출력되는 것을 확인할 수 있다. 참고사항으로 print 문을 사용할 때 Hello Codeit! 같은 글자를 출력할 때는 따옴표로 문장을 감싸주었는데, 숫자 연산을 표현할 때는 따옴표로 감싸주지 않았다. 이 부분을 잘 기억하도록 하자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/16.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/16.png" alt="숫자 연산 출력" class="align-center" /></a></p>

<p>등장한 콘솔은 필요가 없을 때 닫아놓을 수 있다. 콘솔영역의 오른쪽 상단에 <code class="language-plaintext highlighter-rouge">-</code> 버튼을 클릭하여 닫을 수 있다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/17.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/17.png" alt="콘솔 닫기" class="align-center" /></a></p>

<p>이번에는 goodbye.py 파일을 더블클릭하여 연다. Goodbye world! 를 출력하는 코드를 작성하고 우측 상단의 실행 버튼을 클릭해보자.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/18.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/18.png" alt="다른 파일 실행" class="align-center" /></a></p>

<p>콘솔에 Goodbye world! 대신 이전에 실행한 연산의 값인 7이 출력된 것을 확인할 수 있다. 왜 그럴까? 이전에 설명 했듯 실행 버튼은 가장 최근에 실행된 파일을 다시 실행하는 기능이다. 콘솔의 내용을 잘 보면 실행된 파일이 가장 최근에 실행했던 hello.py 파일인 것을 확인할 수 있다. goodbye.py 파일을 실행하기 위해서는 화면 좌측에 goodbye.py 파일을 우클릭 한 뒤 <strong>Run ‘goodbye’</strong> 버튼을 클릭하면 된다. 콘솔에 정상적으로 Goodbye world! 가 출력되는것을 볼 수 있을 것이다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/19.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/19.png" alt="다른 파일 실행2" class="align-center" /></a></p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/20.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/20.png" alt="run 버튼 클릭" class="align-center" /></a></p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/21.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/21.png" alt="정상 출력 확인" class="align-center" /></a></p>

<p>매번 실행 버튼을 누르는 것이 불편하다면 실행을 더 편하게 하는 방법이 있다. 키보드 단축키를 활용하는 방법인데, Mac 기준으로 <code class="language-plaintext highlighter-rouge">⌃ + R</code> 을 눌러 실행할 수 있다. PyCharm의 설정이나 Windows 와 Mac 운영체제의 차이에 따라서 단축키는 다를 수 있다.</p>

<hr />

<h3 id="print-사용해보기">print 사용해보기</h3>

<p>파이썬에서 print 를 사용하여 원하는 내용을 콘솔에 출력할 수 있다. 실습을 위해서 <strong>12</strong> 라는 숫자를 출력하는 print 문을 여러가지 작성해보자. 아래 코드는 예시 코드이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">3</span> <span class="o">*</span> <span class="mi">4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">5</span> <span class="o">+</span> <span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">15</span> <span class="o">-</span> <span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<p>모든 print 문의 결과가 12로 출력되었다.</p>

<p><a href="/assets/images/posts/Codeit/2020-11-22-1/22.png"><img src="/assets/images/posts/Codeit/2020-11-22-1/22.png" alt="12 출력하기 예시" class="align-center" /></a></p>

<p>조금 변형해서 아래와 같은 코드를 작성하고 실행시켜 보자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">3</span><span class="o">*</span><span class="mi">4</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">5</span><span class="o">+</span><span class="mi">7</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="mi">15</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<p>print문 내부에 +, * 등의 연산자와 숫자 사이의 띄어쓰기를 모두 제거했음에도 불구하고 모두 동일하게 12를 출력하고 있는 것을 볼 수 있다. 연산을 할 때 숫자와 연산자 사이에 띄어쓰기를 하지 않아도 동작에는 문제가 없다. 하지만 파이썬에서는 코드를 적는 방법에 대한 스타일 가이드가 있다. 붙여서 작성해도 문법적으로 문제가 없지만 모두가 같은 방식으로 작성해야 다른 사람의 코드를 읽거나 수정하기에 수월하기 때문에 정해진 스타일 가이드를 따르는 것이 좋다. 여기서는 연산자와 숫자는 띄어쓰는 것이 가이드 내용이라고 할 수 있다.</p>

<p>파이썬 개발자들은 <strong>PEP8</strong> 이라는 규칙을 지키는 것을 권장한다. 다음의 링크에서 확인할 수 있다.</p>

<blockquote>
  <p><a href="https://www.python.org/dev/peps/pep-0008/">https://www.python.org/dev/peps/pep-0008/</a></p>
</blockquote>

<hr />

<p><a href="#" class="btn btn--success">Success Button</a></p>
:ET