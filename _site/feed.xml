<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-02T18:15:25+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sanghyuk’s Blog</title><subtitle>Sanghyuk's Blog</subtitle><author><name>SANGHYUK LEE</name></author><entry><title type="html">[git] 버전 관리 무시 목록(.gitignore) 설정</title><link href="http://localhost:4000/git/1/" rel="alternate" type="text/html" title="[git] 버전 관리 무시 목록(.gitignore) 설정" /><published>2020-08-12T00:00:00+09:00</published><updated>2020-08-12T00:00:00+09:00</updated><id>http://localhost:4000/git/1</id><content type="html" xml:base="http://localhost:4000/git/1/">&lt;h1 id=&quot;gitignore&quot;&gt;.gitignore&lt;/h1&gt;

&lt;h2 id=&quot;1-위험성&quot;&gt;1. 위험성&lt;/h2&gt;
&lt;p&gt;특정 파일은 git에서 버전 관리 대상에서 제외해야 합니다.&lt;/p&gt;

&lt;p&gt;프로젝트를 업로드할 때 개인키가 프로젝트 폴더내에 있을 수 있고, 이런 중요한 설정 정보는 git 저장소에 추가하지 말아야 합니다.&lt;/p&gt;

&lt;p&gt;이로인해서 해킹에 대상이 될 수 있고, 심각한 피해를 입을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;2-해결방안&quot;&gt;2. 해결방안&lt;/h2&gt;
&lt;p&gt;git 에는 이러한 문제를 방지하기 위한 무시 목록을 작성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;.gitignore 에 작성된 파일은 git add 명령시 제외됩니다.&lt;/p&gt;

&lt;h2 id=&quot;3-작성법&quot;&gt;3. 작성법&lt;/h2&gt;
&lt;p&gt;.gitignore 의 각 라인에 무시할 파일 또는 디렉토리의 패턴을 적습니다.&lt;/p&gt;

&lt;p&gt;여러 파일을 한번에 지정할 경우 * 을 사용합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jdbc.properties
*.class
*.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 작성하면 git add 명령어를 실행했을 때 jdbc.properties 파일을 제외하며, .class와 .jar 확장자를 가진 파일을 모두 무시합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;이미 추가되어 버전 관리중인 파일에는 영향을 미치지 않습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;4-응용&quot;&gt;4. 응용&lt;/h2&gt;
&lt;p&gt;만약 .gitignore 목록에 있는 파일을 추가해야 할 경우 -f 옵션을 이용해 추가할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add -f jdbc.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.gitignore 에 설정한 내용은 하위 디렉토리에도 동일하게 적용됩니다.&lt;/p&gt;

&lt;p&gt;만약 특정 하위 디렉토리가 다른 ignore 를 적용해야 할 경우 해당 디렉토리에 .gitignore 을 새로 만들어줍니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*
!jdbc.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 .gitignore 을 새로 만들어 config 폴더에 넣을 경우, 기본적으로 config 의 모든 파일을 무시하면서 jdbc.properties 라는 파일은 버전을 관리합니다. !는 이전의 ignore 패턴을 무효화 하는 문자열입니다.&lt;/p&gt;

&lt;p&gt;만약 파일명에 ! 가 들어갈 경우 escape 문자인 \ 를 ! 앞에 붙여줍니다.&lt;/p&gt;

&lt;h2 id=&quot;5-gitignoreio&quot;&gt;5. gitignore.io&lt;/h2&gt;
&lt;p&gt;사용하는 운영체제, IDE, 언어마다 추가하는 패턴들이 있으며 이를 매번 기억하여 입력하는 것은 매우 귀찮습니다.&lt;/p&gt;

&lt;p&gt;이런 귀찮은 일을 대신 처리해주는 &lt;a href=&quot;https://www.toptal.com/developers/gitignore&quot;&gt;gitignore.io&lt;/a&gt; 라는 서비스가 있습니다.&lt;/p&gt;

&lt;p&gt;일반적으로 사용되는 무시 패턴을 해당 서비스를 통해 작성하고, 추가적으로 필요한 부분만 무시 목록을 작성하면 편리하게 사용할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;6-참고&quot;&gt;6. 참고&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;https://git-scm.com/docs/gitignore&lt;/a&gt;&lt;/p&gt;</content><author><name>SANGHYUK LEE</name></author><category term="git" /><category term="git" /><summary type="html">git의 버전 관리 무시 목록에 대해 다룹니다.</summary></entry><entry><title type="html">이력서 작성하기</title><link href="http://localhost:4000/resume/1/" rel="alternate" type="text/html" title="이력서 작성하기" /><published>2020-08-07T00:00:00+09:00</published><updated>2020-08-07T00:00:00+09:00</updated><id>http://localhost:4000/resume/1</id><content type="html" xml:base="http://localhost:4000/resume/1/">&lt;h2 id=&quot;이력서&quot;&gt;이력서&lt;/h2&gt;

&lt;p&gt;이직을 하기 위해서 계속 이력서를 작성해왔다.
채용 사이트인 원티드의 양식을 이용하여 가장 기본적인 내용들을 작성하였고 내용은 계속해서 수정하는 방식으로 작성했다.&lt;/p&gt;

&lt;p&gt;이렇게 작성한 이력서를 통해서 많은 곳에 지원서를 넣어보았고, 합격을 하기도 했다. 
당연하게도 불합격도 있었고 그 수는 적은편이 아니었다고 생각한다. 
요즘에는 이력서는 엉망이 아니라면 패스시키고, 코딩테스트로 변별력을 확보하려는 회사가 많은 것 같은데, 나의 합격 이력서들도 그런식으로 합격한 것이 대다수일 것 같았다.&lt;/p&gt;

&lt;p&gt;이전에 수기로 작성하던 이력서와 달리 요즘에 작성하는 자유양식의 이력서는 사람마다 모두 다르다. 그래서 나만의 독특한 이력서를 만드는 것이 도움이 될지도 모른다.
하지만 가장 중요한 것은 이력서 본래의 목적에 부합하고, 기본적인 내용들이 충실한 것이 중요하다고 생각한다.&lt;/p&gt;

&lt;p&gt;어딘가에 예시로 올라온 이력서를 제외하고서 생각보다 다른 사람의 이력서를 보는 기회가 잘 없다.
그래서 다른 사람이 어떻게 이력서를 채웠는지, 어떤 내용이 다른지를 비교하기가 쉽지 않았다.
그래서 이력서 작성법에 대한 글들을 기회가 되는대로 읽어보았고, 공통되는 부분이 상당히 많다는 것을 알게되었다.&lt;/p&gt;

&lt;p&gt;관계가 있는지는 잘 모르겠지만 글쓰기가 서툰? 개발자가 이력서를 작성할 때, 나와 똑같은 맨땅의 헤딩을 하기보다는 이 글을 읽는 것이 도움이 되지 않을까 싶어서 요약정리를 시작했다.&lt;/p&gt;

&lt;h2 id=&quot;목적&quot;&gt;목적&lt;/h2&gt;

&lt;p&gt;대부분의 이력서는 면접(인터뷰)를 진행하기 전 먼저 제출하는 문서이다.
채용 프로세스의 1차 관문인 서류전형에서 제출하게 되는 경우가 대부분일 것이다.
당연히 이 서류전형에 통과해야만 2차 관문인 코딩테스트 또는 면접에 도달할 수 있다.
그러면 채용 프로세스의 시작인 이력서의 목적은 채용 담당자의 눈에 띄도록 하여 다음 관문에 나를 초대하도록 하는 것이라고 생각했다.&lt;/p&gt;

&lt;p&gt;우선 채용 담당자가 내 이력서를 읽을 수 있어야 한다.
하루에 수 많은 이력서를 처리하는 채용담당자의 눈에 띄기 위해서는 적당히 눈에 잘 띄며, 읽기 좋은 형식이어야 할것이다.
채용 담당자는 모든 이력서를 꼼꼼하게 읽을 수 없기 때문에 어느정도 눈에 띄는 이력서를 1차적으로 걸러낸 후에 걸러진 이력서들을 조금 더 자세하게 훑어본다고 한다.
중요하거나 내세우고 싶은 부분을 적당히 강조하여 표현하고 가독성이 좋게 작성하는 것이 빠르게 눈에 들어오도록 하는 데도움이 될 것이다.&lt;/p&gt;

&lt;p&gt;추가적으로 나의 이력서를 읽고서 호기심을 느끼도록 해야한다.
다음 단계로 넘어가면 코딩테스트를 통해 나의 실력을 가늠하거나 인터뷰를 통해 실제로 만나서 이야기를 하게 되는데, 그만큼 나에게 더 알고 싶은 부분이 생기도록 만들어야 한다.
이 부분에서는 기존의 경험이나, 실력을 어필하는 것이 도움이 된다고 생각한다.&lt;/p&gt;

&lt;h2 id=&quot;기본&quot;&gt;기본&lt;/h2&gt;

&lt;p&gt;이력서 작성에 있어서 가장 기본적인 수칙들은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모든 내용에는 사실만을 작성한다.&lt;/li&gt;
  &lt;li&gt;전체 이력서의 길이를 가능한 짧게 작성한다.
    &lt;ul&gt;
      &lt;li&gt;길이가 길수록 퍼져있는 중요한 내용들을 채용 담당자가 자세하게 읽지 못할 가능성이 높다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;줄글로 작성하기보다는 목록으로 작성한다.&lt;/li&gt;
  &lt;li&gt;가독성이 좋은 레이아웃을 채택/제작 하여 작성한다.
    &lt;ul&gt;
      &lt;li&gt;내용의 순서 및 위치, 적당한 여백, 강조 표시 등으로 구성할 수 있다.&lt;/li&gt;
      &lt;li&gt;감이 오지 않는다면 &lt;a href=&quot;https://docs.google.com/document/u/0/?ftv=1&amp;amp;tgif=c&quot;&gt;구글 문서 이력서 템플릿&lt;/a&gt;이나 원티드의 이력서 등을 참고하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;맞춤법을 검사하자.
    &lt;ul&gt;
      &lt;li&gt;맞춤법 검사기를 이용하여 오탈자를 수정하는 작업이 꼭 필요하다.&lt;/li&gt;
      &lt;li&gt;자소설 닷컴의 자소서 작성란의 &lt;a href=&quot;https://www.jasoseol.com/resume&quot;&gt;맞춤법 검사기&lt;/a&gt;를 이용하고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;링크를 추가한 경우 모든 링크가 정상적으로 작동하는지 검사한다.
    &lt;ul&gt;
      &lt;li&gt;github 링크 등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;PDF형식으로 저장하며 요구하지 않는다면 별도 첨부파일을 첨부하지 않는다.
    &lt;ul&gt;
      &lt;li&gt;채용 담당자는 많은 양의 서류를 검토하기 때문에 하나하나 읽지 않을 가능성이 높고, 결정적으로 해당 파일을 열지 못할 수 있다. (뷰어가 없다거나..)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구성&quot;&gt;구성&lt;/h2&gt;

&lt;p&gt;지원하는 기업, 기업에서의 요구사항, 개인의 성향 등 여러가지 차이로 인해서 구성을 달라질 수 있다.
반드시 아래 구성을 따라야 하는 것은 아니지만 어느정도 보편화된 구성이라고 생각한다.&lt;/p&gt;

&lt;h3 id=&quot;제목&quot;&gt;제목&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;필수로 작성하지 않아도 되지만 한줄로 작성한 제목이 나를 잘 설명할 수 있다면 좋은 임팩트를 줄 수 있다.&lt;/li&gt;
  &lt;li&gt;너무 오글거리지 않게, 기억되기 쉽도록, 호기심을 유발하는 문장이면 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;인적사항&quot;&gt;인적사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이름, 연락처, 이메일, 블로그 링크 등을 포함하여 적는다.&lt;/li&gt;
  &lt;li&gt;나이, 결혼 여부, 주소 등은 최근 기업에서도 요구하지 않는 경우가 많다. 제외하자.&lt;/li&gt;
  &lt;li&gt;사진의 경우 기업에서 필수로 요구하지 않는 경우가 많아져 넣지 않아도 된다. 하지만 뭔가 공간이 비어보여서 넣었는데, 이왕 넣을 거려먼 직무와 관련된 활동이나, 그나마 잘나왔다고 생각하는 사진을 넣자😂&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;자기소개&quot;&gt;자기소개&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;경력/경험에 대한 내용, 업무나 관련 분야에서의 관심사에 대한 짧은 소개글을 작성한다.&lt;/li&gt;
  &lt;li&gt;2~5줄 정도로 자신이 어떤 사람인지에 대해 작성하되 필요하다면 너무 많지 않은 수준에서 더 작성해도 된다.&lt;/li&gt;
  &lt;li&gt;내용이 길어진다면 문단을 활용하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;경험&quot;&gt;경험&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;회사명, 부서, 직함, 기간, 업무, 기술, 결과(성과 등)을 포함하여 작성한다.&lt;/li&gt;
  &lt;li&gt;자신이 어떤 역량을 보유하고 어떻게 일해왔는지를 보여주는 가장 중요한 부분이라고 볼 수 있다.&lt;/li&gt;
  &lt;li&gt;가장 최근의 경험이 제일 상단에 오도록 작성한다. (최신-과거 순)&lt;/li&gt;
  &lt;li&gt;경험이 회사에서 겪은 경험뿐만 기타 경험이 있다면 세부 카테고리를 나누어 작성하는 것도 좋다.&lt;/li&gt;
  &lt;li&gt;여러명이 참여한 프로젝트의 경우 자신의 역할과 경험을 중심으로 작성하고, 기여도를 작성한다.&lt;/li&gt;
  &lt;li&gt;제대로 진행한 프로젝트만 기입한다. 중요하지 않거나 규모가 너무 작다면 과감하게 제외한다.&lt;/li&gt;
  &lt;li&gt;업무 자체를 성과인 것처럼 작성하면 이력서의 전체적인 인상이 약해지는 역효과를 준다. 그런 내용은 삭제하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;개인-프로젝트&quot;&gt;개인 프로젝트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;경험 항목과 동일하게 작성하되 없는 경험을 만들거나 짜내어 작성할 필요까지는 없다.&lt;/li&gt;
  &lt;li&gt;프로젝트가 현재 서비스중이라면 해당 링크를 포함시키는 것이 좋다.&lt;/li&gt;
  &lt;li&gt;반대로 서비스를 중지했다면 서비스중지사유를 함께 적어주자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기술&quot;&gt;기술&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;자신이 활용할 수 있는 기술만 적는다.&lt;/li&gt;
  &lt;li&gt;익숙하지 않거나 지나가면서 들어보기만 한 기술, 프로젝트에 사용되었지만 내가 사용하지 않은 기술 등은 제외한다.&lt;/li&gt;
  &lt;li&gt;기술을 사용한 연차, 숙련도 등을 표시할 필요는 없다. 위 경험 항목에서 기술의 정도를 알 수 있게 작성하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;학력&quot;&gt;학력&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;학교, 전공, 입학/졸업 시기 정도를 간략하게 작성한다.&lt;/li&gt;
  &lt;li&gt;학점이나 휴학에 대한 정보는 작성하지 않는다.&lt;/li&gt;
  &lt;li&gt;지원하는 기업이나, 포지션 등에 관련이 있는 논문이나 프로젝트가 있다면 추가적으로 한두 줄 추가해도 좋다.&lt;/li&gt;
  &lt;li&gt;정규 교육, 대학 교육뿐만 아니라 지원한 기업이나 포지션에 관련이 있는 프로그램 수료, 학원 교육 이수, 부트 캠프 등을 적어도 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;피드백&quot;&gt;피드백&lt;/h2&gt;

&lt;p&gt;이력서는 작성자가 아닌 다른 사람이 읽는 문서이다. 아무리 잘 작성했다고 생각해도 다른 사람이 보았을 때 문제가 나타날 수 있다.
이력서를 모두 작성했다면 조금 부끄러워도 주변 사람들에게 피드백 받는 것을 추천한다.
피드백을 받아 부족한 부분을 수정하여 더욱 개선된 이력서를 작성할 수 있다.&lt;/p&gt;

&lt;p&gt;사실 피드백을 받을 때 아무에게나 피드백을 받아서는 큰 의미가 없을 수 있다. 이럴 때 어떤 사람에게 피드백을 받으면 좋을지에 대한 의문이 생긴다.
가장 좋은 피드백을 줄 수 있는 사람은&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;내가 일하는 분야에 인사이트가 있는 사람&lt;/li&gt;
  &lt;li&gt;신뢰할 수 있고 솔직하게 피드백을 해줄 수 있는 사람&lt;/li&gt;
  &lt;li&gt;채용을 담당해본 사람&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이라고 생각한다.&lt;/p&gt;

&lt;p&gt;주변에 위와 같은 사람이 전혀 없다면 개발자관련 행사등에 참여하여 기회를 스스로 만들어 내는 방법도 있고, 유명하신 분들에게 메일로 정중히 요청하는 방법도 있다. 피드백을 잘 받았다면 꼭 감사인사를 하도록 하자.&lt;/p&gt;

&lt;h2 id=&quot;이력서-체크리스트&quot;&gt;이력서 체크리스트&lt;/h2&gt;

&lt;p&gt;이력서 작성을 도와주는 체크리스트를 작성할 계획이다. 추후 공개~&lt;/p&gt;

&lt;h2 id=&quot;이력서-관련-글&quot;&gt;이력서 관련 글&lt;/h2&gt;

&lt;p&gt;좋은 이력서 작성을 위해서 많은 글을 읽었다. 그 중 많이 참고하고 좋은 글들을 링크로 공유한다.&lt;/p&gt;

&lt;h2 id=&quot;공개-이력서&quot;&gt;공개 이력서&lt;/h2&gt;

&lt;p&gt;다른 사람의 이력서를 읽는 것은 피드백 요청을 받거나, 채용을 담당하는 사람이 아니라면 힘들다.
아래는 공개되어있고 잘 작성된 이력서들이다. 다른 사람들의 이력서를 참고하는 것이 큰 도움이 되었다.&lt;/p&gt;

&lt;h2 id=&quot;마침&quot;&gt;마침&lt;/h2&gt;

&lt;p&gt;사실 이력서는 작성자가 어떤 경험을 했는지, 어떤 역량을 쌓아왔는지, 자신의 경험과 역량을 얼마나 잘 보여주는지가 가장 중요하다고 생각한다.
이력서가 이쁘고, 정리가 잘 되어있어도 좋은 경험이 적다면 경쟁력이 떨어질 것이다.
좋은 경험을 가지고 있고 뛰어난 역량을 가지고 있는데 이력서를 잘 못 작성하여 서류부터 광탈하는 경우가 없기를 바란다.
가슴이 웅장해지는 이직을 하는데 도움이 되었다면 좋겠다.&lt;/p&gt;

&lt;p&gt;ps. 처음 입사지원을 할 당시의 이력서 수십통을 찾아내어 다시 보는 계기가 되었다.
어떻게 서류에서 합격을 했고 면접을 보러 다녔는지 정말 신기하다.
그만큼 간절했던 시기였지만 지금 돌이켜보면 이력서에 적으면 좋지 않다는 점을 죄다 적었으며 굉장히 촌스럽다.&lt;/p&gt;</content><author><name>SANGHYUK LEE</name></author><category term="Resume" /><category term="Resume" /><summary type="html">이력서를 작성 체크리스트</summary></entry><entry><title type="html">블로그 시작</title><link href="http://localhost:4000/blog/1/" rel="alternate" type="text/html" title="블로그 시작" /><published>2020-08-03T00:00:00+09:00</published><updated>2020-08-03T00:00:00+09:00</updated><id>http://localhost:4000/blog/1</id><content type="html" xml:base="http://localhost:4000/blog/1/">&lt;h2 id=&quot;블로그&quot;&gt;블로그&lt;/h2&gt;
&lt;p&gt;제대로 된 블로그를 만들어보자는 생각을 가지고서 몇 번이나 블로그를 만들었지만 매번 얼마 지나지 않아 더 이상 글을 올리지 않게 되었습니다. 이유는 여러 가지지만 가장 큰 이유는 &lt;strong&gt;‘방법을 몰라서’&lt;/strong&gt; 였던 것 같습니다.&lt;/p&gt;

&lt;h2 id=&quot;좋은-기술-블로그&quot;&gt;좋은 기술 블로그&lt;/h2&gt;
&lt;p&gt;업무를 하면서 많은 블로그들을 봅니다. 글을 잘 작성하고 정리가 잘 되어 보기 편한 블로그가 있다면 정반대인 블로그도 있습니다. 읽는 사람이 보기 편하고 원하는 정보를 정확하게 얻을 수 있다면 그것이 좋은 블로그인 것 같습니다. 좋은 블로그가 되기 위한 방법을 블로그에서 보게 되었습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;완성된 글을 작성한다.&lt;/li&gt;
  &lt;li&gt;적당한 분량의 글을 작성한다.&lt;/li&gt;
  &lt;li&gt;글의 형식을 정한다.&lt;/li&gt;
  &lt;li&gt;컨텐츠 관리가 가능한 블로그 도구를 선택한다.&lt;/li&gt;
  &lt;li&gt;보존, 보존, 그리고 보존&lt;/li&gt;
  &lt;li&gt;수익을 얻는다.&lt;/li&gt;
  &lt;li&gt;글을 홍보하기 위한 채널을 만든다.&lt;/li&gt;
  &lt;li&gt;검색 엔진 최적화(SEO)를 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이전에 만들었던 블로그에 작성된 글들은 제시된 8가지 중 한 가지도 제대로 지키지 못했습니다. 좋은 블로그를 만들기 위해서는 공부가 필요하다는 것을 알았습니다. 앞으로는 나와 내 글을 읽는 사람을 위해 완벽하진 않아도 최대한 좋은 글을 쓰고, 좋은 블로그를 만들어보려고 합니다.&lt;/p&gt;

&lt;p&gt;수익이라는 항목은 블로그의 수익 구조가 어떤 형태인지 모르겠지만 수익을 얻을 만큼 고급 정보는 없을 테니 기대는 말아야겠습니다.😅&lt;/p&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.44bits.io/ko/post/8-suggestions-for-tech-programming-blog&quot;&gt;좋은 기술 블로그를 만들어 나가기 위한 8가지 제언&lt;/a&gt;&lt;/p&gt;</content><author><name>SANGHYUK LEE</name></author><category term="Blog" /><category term="Blog" /></entry></feed>